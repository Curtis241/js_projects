{
  "name": "qunit-extras",
  "version": "1.4.4",
  "description": "Extends QUnit with extra features and CLI support.",
  "license": "MIT",
  "main": "qunit-extras.js",
  "keywords": [
    "qunit",
    "cli"
  ],
  "author": {
    "name": "John-David Dalton",
    "email": "john.david.dalton@gmail.com",
    "url": "http://allyoucanleet.com/"
  },
  "contributors": [
    {
      "name": "John-David Dalton",
      "email": "john.david.dalton@gmail.com",
      "url": "http://allyoucanleet.com/"
    },
    {
      "name": "Benjamin Tan",
      "email": "demoneaux@gmail.com",
      "url": "https://d10.github.io/"
    },
    {
      "name": "Mathias Bynens",
      "email": "mathias@qiwi.be",
      "url": "https://mathiasbynens.be/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jdalton/qunit-extras"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "devDependencies": {
    "qunitjs": "~1.19.0"
  },
  "files": [
    "qunit-extras.js"
  ],
  "readme": "# QUnit Extras v1.4.4\n\nExtends QUnit with extra features and CLI support.\n\n## Usage\n\n```js\n;(function() {\n\n  // Used as reference to the global object.\n  var root = (typeof global == 'object' && global) || this;\n\n  // Used as a no-op function.\n  var noop = Function.prototype;\n\n  // Use a single \"load\" function.\n  var load = (typeof require == 'function' && !(root.define && define.amd))\n    ? require\n    : (!root.document && root.java && root.load) || noop;\n\n  // Load QUnit in a way to workaround cross-environment issues.\n  var QUnit = root.QUnit || (root.QUnit = (\n    root.addEventListener || (root.addEventListener = noop),\n    root.setTimeout || (root.setTimeout = noop),\n    QUnit = load('path/to/qunit.js') || root.QUnit,\n    addEventListener === noop && delete root.addEventListener,\n    QUnit = QUnit.QUnit || QUnit\n  ));\n\n  // Load QUnit Extras.\n  var qe = load('path/to/qunit-extras.js');\n  if (qe) {\n    qe.runInContext(root);\n  }\n\n  // Set the number of retries an async tests may attempt.\n  QUnit.config.asyncRetries = 10;\n\n  // Excuse tests.\n  QUnit.config.excused = {\n    // Specify the module name.\n    'qunit module': {\n      // Excuse individual asserts in a test.\n      'a qunit test': [\n        // Excuse by assert message.\n        'assert message',\n\n        // Excuse by expected result.\n        '[1,2,3]',\n\n        // Excuse by error indicator.\n        'Died on test #1',\n      ],\n      // Excuse an entire test.\n      'another qunit test': true\n    }\n  };\n\n  // Call `QUnit.module()` instead of `module()` when in a CLI.\n  QUnit.module('some test module');\n\n  QUnit.test('some test', function() {\n    // ...\n  });\n\n  // Depending on the version of `QUnit` call either `QUnit.start()` or `QUnit.load()`\n  // when in a CLI or PhantomJS.\n  if (!root.document || root.phantom) {\n    QUnit.load();\n  }\n}.call(this));\n```\n\n## Footnotes\n\n  1. QUnit v1.3.0 and v1.12.0-v1.15.0 are not fully supported by QUnit Extras CLI additions\n  2. Rhino v1.7RC4 does not support timeout fallbacks `clearTimeout` and `setTimeout`\n\n## Support\n\nTested in Node.js 0.8.28 & 0.10.35, PhantomJS 1.9.8, RingoJS 0.11, & Rhino 1.7RC5.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jdalton/qunit-extras/issues"
  },
  "_id": "qunit-extras@1.4.4",
  "dist": {
    "shasum": "fe2936573cb7536190e35fe683e5019fd0608b3a"
  },
  "_from": "qunit-extras@",
  "_resolved": "https://registry.npmjs.org/qunit-extras/-/qunit-extras-1.4.4.tgz"
}
